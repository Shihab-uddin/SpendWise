// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  password       String
  isVerified     Boolean   @default(false)
  verificationToken String?
  wallets        Wallet[]
  createdAt      DateTime  @default(now())
}

model Wallet {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  balance     Float         @default(0)
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  incomes     Income[]
  expenses    Expense[]
  transfersFrom Transfer[]  @relation("TransferFromWallet")
  transfersTo   Transfer[]  @relation("TransferToWallet")
  createdAt    DateTime     @default(now())
}

model Income {
  id        Int      @id @default(autoincrement())
  name      String
  amount    Float
  date      DateTime
  day       String
  wallet    Wallet   @relation(fields: [walletId], references: [id])
  walletId  Int
  createdAt DateTime @default(now())
}

model Expense {
  id        Int      @id @default(autoincrement())
  name      String
  amount    Float
  date      DateTime
  day       String
  wallet    Wallet   @relation(fields: [walletId], references: [id])
  walletId  Int
  createdAt DateTime @default(now())
}

model Transfer {
  id             Int      @id @default(autoincrement())
  fromWallet     Wallet   @relation("TransferFromWallet", fields: [fromWalletId], references: [id])
  fromWalletId   Int
  toWallet       Wallet   @relation("TransferToWallet", fields: [toWalletId], references: [id])
  toWalletId     Int
  amount         Float
  date           DateTime
  day            String
  createdAt      DateTime @default(now())
}

