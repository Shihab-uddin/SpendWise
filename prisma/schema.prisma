generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  name               String
  email              String    @unique
  password           String
  isVerified         Boolean   @default(false)
  verificationToken  String?
  wallets            Wallet[]
  createdAt          DateTime  @default(now())
}

model Wallet {
  id              Int           @id @default(autoincrement())
  name            String
  description     String?
  balance         Float         @default(0)
  user            User          @relation(fields: [userId], references: [id])
  userId          Int
  incomes         Income[]
  expenses        Expense[]
  transfersFrom   Transfer[]    @relation("TransferFromWallet")
  transfersTo     Transfer[]    @relation("TransferToWallet")
  createdAt       DateTime      @default(now())
}

model Income {
  id          Int      @id @default(autoincrement())
  name        String
  amount      Float
  description String?
  date        DateTime
  wallet      Wallet   @relation(fields: [walletId], references: [id], onDelete: Cascade)
  walletId    Int
  createdAt   DateTime @default(now())
}

model Expense {
  id          Int      @id @default(autoincrement())
  name        String
  amount      Float
  description String?
  date        DateTime
  wallet      Wallet   @relation(fields: [walletId], references: [id], onDelete: Cascade)
  walletId    Int
  createdAt   DateTime @default(now())
}

model Transfer {
  id             Int      @id @default(autoincrement())
  fromWallet     Wallet   @relation("TransferFromWallet", fields: [fromWalletId], references: [id], onDelete: Cascade)
  fromWalletId   Int
  toWallet       Wallet   @relation("TransferToWallet", fields: [toWalletId], references: [id], onDelete: Cascade)
  toWalletId     Int
  amount         Float
  description    String?
  date           DateTime
  createdAt      DateTime @default(now())
}
